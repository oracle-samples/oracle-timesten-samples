###############################################################################
#
# Linux (gcc/g++) x86-64 (64-bit) Makefile for the TimesTen TTCLASSES XLA
# sample programs.
#
# Copyright (c) 1999, 2017, Oracle and/or its affiliates. All rights reserved.
#
###############################################################################

TT_MVL_LINUX  = 0

INSTDIR         = $(TIMESTEN_HOME)/install
COMMON          = $(QUICKSTART_HOME)/sample_code/common
SAMPLES         = $(QUICKSTART_HOME)/sample_code/ttclasses
TTC_INCLUDEDIR  =  $(INSTDIR)/include/ttclasses


GCC32 = $(shell sh -c "gcc -dumpversion" 2>/dev/null | grep '^3\.[2-9]')
ifneq (,$(GCC32))
  USING_GCC_32    = -m64
  USING_GCC_32_LD = -m64
endif

64BIT         = -DTT_64BIT
THREAD_SAFE   = -D_THREAD_SAFE -D_REENTRANT
POSIX_THREADS = -D_POSIX_PTHREAD_SEMANTICS -D_POSIX_THREADS_CALLS

OPTFLAG       = -O -Wuninitialized
DEBUGFLAG     = -g -Wall -W -Wcast-qual -Wshadow -Wpointer-arith \
                -Wno-return-type -DTTDEBUG

CFLAGS        = $(OPTFLAG) -I.. -I$(INSTDIR)/include -I$(TTC_INCLUDEDIR) -Ilib \
                -DGCC $(USING_GCC_32) $(64BIT) $(THREAD_SAFE) -I$(COMMON)

ifeq ($(TT_MVL_LINUX),1)
EXTRALIBS       = -ldl -lrt -lstdc++ -lttco
endif

LDFLAGS       = $(USING_GCC_32_LD)
DIRLIBS       = -lpthread -lnsl $(EXTRALIBS) -L$(INSTDIR)/lib -ltten -lttclasses

CPLUSPLUS     = g++
CC            = gcc

# default LINK line (both opt/debug)
LINK          =  $(CC) -shared $(USING_GCC_32_LD) -o

ARFLAGS       =

SHLDEXT       = so
AREXT         = a

OBJ_DIR       = obj

# used to determine library names
TT_LIBTTEN    = $(wildcard $(INSTDIR)/lib/libtten.$(SHLDEXT))

# -----------------------------------------------------------------------------
# file lists
# -----------------------------------------------------------------------------

TTC_DEMO_CPP_OBJS = \
$(OBJ_DIR)/ttXlaAdmin.o \
$(OBJ_DIR)/xlasubscriber1.o \
$(OBJ_DIR)/xlasubscriber2.o

UTILS = \
$(SAMPLES)/$(OBJ_DIR)/testprog_utils.o

TESTPROGS = \
ttXlaAdmin \
xlasubscriber1 \
xlasubscriber2

MD := mkdir

# -----------------------------------------------------------------------------
#  Top-level targets
# -----------------------------------------------------------------------------
ifneq ($(strip $(TT_LIBTTEN)),)
PROGS = $(TESTPROGS)
endif

all: $(OBJ_DIR) $(PROGS)

clean:
		-rm -rf $(OBJ_DIR)/*.o $(TESTPROGS)
		$(PLAT_SPECIFIC_CLEAN)

$(OBJ_DIR):
        $(MD) obj
		
# -----------------------------------------------------------------------------
# build targets
# -----------------------------------------------------------------------------

.SUFFIXES: .cpp $(SUFFIXES)

.KEEP.STATE:

$(OBJ_DIR)/%.o:%.c
	$(CC) $(CFLAGS) -c $*.c -o $@

$(OBJ_DIR)/%.o:%.cpp
	$(CPLUSPLUS) $(CFLAGS) -c $*.cpp -o $@

#
# TTClasses direct linked sample programs
#

ttXlaAdmin: $(UTILS) $(OBJ_DIR)/ttXlaAdmin.o
	$(CPLUSPLUS) -o $@ $(OBJ_DIR)/ttXlaAdmin.o $(UTILS) \
	$(LDFLAGS) $(DIRLIBS)

xlasubscriber1: $(UTILS) $(OBJ_DIR)/xlasubscriber1.o
	$(CPLUSPLUS) -o $@ $(OBJ_DIR)/xlasubscriber1.o $(UTILS) \
	$(LDFLAGS) $(DIRLIBS)

xlasubscriber2: $(UTILS) $(OBJ_DIR)/xlasubscriber2.o
	$(CPLUSPLUS) -o $@ $(OBJ_DIR)/xlasubscriber2.o $(UTILS) \
	$(LDFLAGS) $(DIRLIBS)

