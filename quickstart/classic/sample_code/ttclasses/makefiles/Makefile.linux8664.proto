###############################################################################
#
# Linux (gcc/g++) x86-64 (64-bit) Makefile for the TimesTen TTCLASSES 
# sample programs.
#
# Copyright (c) 1999, 2024, Oracle and/or its affiliates. All rights reserved.
#
###############################################################################

INSTDIR         = $(TIMESTEN_HOME)/install
COMMON          = $(QUICKSTART_HOME)/sample_code/common
SAMPLES         = $(QUICKSTART_HOME)/sample_code/ttclasses
TTC_INCLUDEDIR  =  $(INSTDIR)/include/ttclasses


THREAD_SAFE   = -D_THREAD_SAFE -D_REENTRANT
POSIX_THREADS = -D_POSIX_PTHREAD_SEMANTICS -D_POSIX_THREADS_CALLS

OPTFLAG       = -O -Wuninitialized
DEBUGFLAG     = -g -Wall -W -Wcast-qual -Wshadow -Wpointer-arith \
                -Wno-return-type -DTTDEBUG

CFLAGS        = $(OPTFLAG) -DTT_64BIT -I$(INSTDIR)/include -I$(TTC_INCLUDEDIR) -Ilib \
                -DGCC $(THREAD_SAFE) -I$(COMMON)

LDFLAGS       = 
DCLIBS        = -lpthread -lnsl $(EXTRALIBS) -L$(INSTDIR)/lib -ltten -lttclasses
CSLIBS        = -lpthread -lnsl $(EXTRALIBS) -L$(INSTDIR)/lib -lttclient -lttclassesCS

CPLUSPLUS     = g++
CC            = gcc

# default LINK line (both opt/debug)
LINK          =  $(CC) -shared -o

ARFLAGS       =

SHLDEXT       = so
AREXT         = a

OBJ_DIR       = obj

# used to determine library names
TT_CLIENTLIB  = $(wildcard $(INSTDIR)/lib/libttclient.$(SHLDEXT))
TT_LIBTTEN    = $(wildcard $(INSTDIR)/lib/libtten.$(SHLDEXT))

# -----------------------------------------------------------------------------
# file lists
# -----------------------------------------------------------------------------

TTC_DEMO_CPP_OBJS = \
$(OBJ_DIR)/basics.o \
$(OBJ_DIR)/bulkcp.o \
$(OBJ_DIR)/bulktest.o \
$(OBJ_DIR)/catalog.o \
$(OBJ_DIR)/changemon_multi.o \
$(OBJ_DIR)/plsqlTTCLASSES.o \
$(OBJ_DIR)/pooltest.o \
$(OBJ_DIR)/testprog_utils.o \
$(OBJ_DIR)/ttSizeAll.o \
$(OBJ_DIR)/typetest.o

TTC_DEMO_C_OBJS = \
$(OBJ_DIR)/portable_thread_unix.o

TESTPROGS = \
basics \
bulkcp \
bulktest \
catalog \
plsqlTTCLASSES \
pooltest \
ttSizeAll \
typetest

TESTPROGS_CS = \
basicsCS \
bulkcpCS \
bulktestCS \
catalogCS \
plsqlTTCLASSESCS \
pooltestCS \
ttSizeAllCS \
typetestCS

UTILS = \
$(OBJ_DIR)/testprog_utils.o

MD := mkdir

# -----------------------------------------------------------------------------
#  Top-level targets
# -----------------------------------------------------------------------------
ifneq ($(strip $(TT_LIBTTEN)),)
PROGS = $(TESTPROGS)
endif

ifneq ($(strip $(TT_CLIENTLIB)),)
PROGS += $(TESTPROGS_CS)
endif

all: $(OBJ_DIR) $(PROGS)

clean:
		-rm -rf $(OBJ_DIR)/*.o $(TESTPROGS) $(TESTPROGS_CS)
		$(PLAT_SPECIFIC_CLEAN)

$(OBJ_DIR):
		$(MD) obj

# -----------------------------------------------------------------------------
# build targets
# -----------------------------------------------------------------------------

.SUFFIXES: .cpp $(SUFFIXES)

.KEEP.STATE:

$(OBJ_DIR)/%.o:%.c
	$(CC) $(CFLAGS) -c $*.c -o $@

$(OBJ_DIR)/%_client.o:%.c
	$(CC) $(CFLAGS) $(CSDEFS) -c $*.c -o $@

$(OBJ_DIR)/%.o:%.cpp
	$(CPLUSPLUS) $(CFLAGS) -c $*.cpp -o $@

$(OBJ_DIR)/%_client.o:%.cpp
	$(CPLUSPLUS) $(CFLAGS) $(CSDEFS) -c $*.cpp -o $@

#
# TTClasses direct linked sample programs
#

basics: $(UTILS) $(OBJ_DIR)/basics.o
	$(CPLUSPLUS) -o $@ $(OBJ_DIR)/basics.o $(UTILS) $(LDFLAGS) $(DCLIBS)

bulkcp: $(UTILS) $(OBJ_DIR)/bulkcp.o
	$(CPLUSPLUS) -o $@ $(OBJ_DIR)/bulkcp.o $(UTILS) $(LDFLAGS) $(DCLIBS)

bulktest: $(UTILS) $(OBJ_DIR)/bulktest.o
	$(CPLUSPLUS) -o $@ $(OBJ_DIR)/bulktest.o $(UTILS) $(LDFLAGS) $(DCLIBS)

catalog: $(UTILS) $(OBJ_DIR)/catalog.o
	$(CPLUSPLUS) -o $@ $(OBJ_DIR)/catalog.o $(UTILS) $(LDFLAGS) $(DCLIBS)

plsqlTTCLASSES: $(UTILS) $(OBJ_DIR)/plsqlTTCLASSES.o
	$(CPLUSPLUS) -o $@ $(OBJ_DIR)/plsqlTTCLASSES.o $(UTILS) $(LDFLAGS) $(DCLIBS)

pooltest: $(UTILS) $(OBJ_DIR)/pooltest.o $(TTC_DEMO_C_OBJS)
	$(CPLUSPLUS) -o $@ $(OBJ_DIR)/pooltest.o $(TTC_DEMO_C_OBJS) $(UTILS) $(LDFLAGS) $(DCLIBS)

typetest: $(UTILS) $(OBJ_DIR)/typetest.o
	$(CPLUSPLUS) -o $@ $(OBJ_DIR)/typetest.o $(UTILS) $(LDFLAGS) $(DCLIBS)

ttSizeAll: $(UTILS) $(OBJ_DIR)/ttSizeAll.o
	$(CPLUSPLUS) -o $@ $(OBJ_DIR)/ttSizeAll.o $(UTILS) $(LDFLAGS) $(DCLIBS)

#
# TTClasses client-linked sample programs
#

basicsCS: $(OBJ_DIR)/basics_client.o $(OBJ_DIR)/testprog_utils_client.o
	$(CPLUSPLUS) -o $@ $(OBJ_DIR)/basics_client.o $(OBJ_DIR)/testprog_utils_client.o $(LDFLAGS) $(CSLIBS)

bulkcpCS: $(OBJ_DIR)/bulkcp_client.o $(OBJ_DIR)/testprog_utils_client.o
	$(CPLUSPLUS) -o $@ $(OBJ_DIR)/bulkcp_client.o $(OBJ_DIR)/testprog_utils_client.o $(LDFLAGS) $(CSLIBS)

bulktestCS: $(OBJ_DIR)/bulktest_client.o $(OBJ_DIR)/testprog_utils_client.o
	$(CPLUSPLUS) -o $@ $(OBJ_DIR)/bulktest_client.o $(OBJ_DIR)/testprog_utils_client.o $(LDFLAGS) $(CSLIBS)

catalogCS: $(OBJ_DIR)/catalog_client.o $(OBJ_DIR)/testprog_utils_client.o
	$(CPLUSPLUS) -o $@ $(OBJ_DIR)/catalog_client.o $(OBJ_DIR)/testprog_utils_client.o $(LDFLAGS) $(CSLIBS)

plsqlTTCLASSESCS: $(OBJ_DIR)/plsqlTTCLASSES_client.o $(OBJ_DIR)/testprog_utils_client.o
	$(CPLUSPLUS) -o $@ $(OBJ_DIR)/plsqlTTCLASSES_client.o $(OBJ_DIR)/testprog_utils_client.o $(LDFLAGS) $(CSLIBS)

pooltestCS: $(OBJ_DIR)/pooltest_client.o $(OBJ_DIR)/testprog_utils_client.o $(OBJ_DIR)/portable_thread_unix_client.o
	$(CPLUSPLUS) -o $@ $(OBJ_DIR)/pooltest_client.o $(OBJ_DIR)/portable_thread_unix_client.o $(OBJ_DIR)/testprog_utils_client.o $(LDFLAGS) $(CSLIBS)

typetestCS: $(OBJ_DIR)/typetest_client.o  $(OBJ_DIR)/testprog_utils_client.o
	$(CPLUSPLUS) -o $@ $(OBJ_DIR)/typetest_client.o $(OBJ_DIR)/testprog_utils_client.o $(LDFLAGS) $(CSLIBS)

###
### "useful" sample programs
###

ttSizeAllCS: $(OBJ_DIR)/ttSizeAll_client.o $(OBJ_DIR)/testprog_utils_client.o
	$(CPLUSPLUS) -o $@ $(OBJ_DIR)/ttSizeAll_client.o $(OBJ_DIR)/testprog_utils_client.o $(LDFLAGS) $(CSLIBS)

